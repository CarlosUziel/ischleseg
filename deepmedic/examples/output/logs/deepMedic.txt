2018-06-05 08:25:12.415666 >> =============================== logger created =======================================
2018-06-05 08:25:12.415711 >> CONFIG: Given THEANO_FLAGS: ,on_unused_input=warn,mode=FAST_RUN,device=cuda,floatX=float32,force_device=True,dnn.enabled=auto,openmp=True
2018-06-05 08:25:12.415730 >> CONFIG: The configuration file for the session was loaded from: /home/uziel/DISS/ischleseg/deepmedic/examples/configFiles/deepMedic/model/modelConfig.cfg
2018-06-05 08:25:12.415830 >> 
===========    NEW CREATE-MODEL SESSION    ============
2018-06-05 08:25:12.415849 >> =============================================================
2018-06-05 08:25:12.415864 >> =============== PARAMETERS FOR MODEL CREATION ===============
2018-06-05 08:25:12.415877 >> =============================================================
2018-06-05 08:25:12.415892 >> CNN model's name = deepMedic
2018-06-05 08:25:12.415906 >> Main output folder = /home/uziel/DISS/ischleseg/deepmedic/examples/output
2018-06-05 08:25:12.415920 >> Path and filename to save model = /home/uziel/DISS/ischleseg/deepmedic/examples/output/cnnModels/deepMedic
2018-06-05 08:25:12.415934 >> ~~~~~~~~~~~~~~~~~~Model parameters~~~~~~~~~~~~~~~~
2018-06-05 08:25:12.415948 >> Number of Classes (including background) = 5
2018-06-05 08:25:12.415962 >> ~~Normal Pathway~~
2018-06-05 08:25:12.415976 >> Number of Input Channels = 2
2018-06-05 08:25:12.415990 >> Number of Layers = 8
2018-06-05 08:25:12.416008 >> Number of Feature Maps per layer = [30, 30, 40, 40, 40, 40, 50, 50]
2018-06-05 08:25:12.416028 >> Kernel Dimensions per layer = [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]
2018-06-05 08:25:12.416044 >> Receptive Field = [17, 17, 17]
2018-06-05 08:25:12.416060 >> Residual connections added at the output of layers (indices from 0) = [3, 5, 7]
2018-06-05 08:25:12.416075 >> Layers that will be made of Lower Rank (indices from 0) = []
2018-06-05 08:25:12.416089 >> Lower Rank layers will be made of rank = []
2018-06-05 08:25:12.416104 >> ~~Subsampled Pathway~~
2018-06-05 08:25:12.416119 >> Use subsampled Pathway = True
2018-06-05 08:25:12.416134 >> Number of subsampled pathways that will be built = 1
2018-06-05 08:25:12.416150 >> Number of Layers (per sub-pathway) = [8]
2018-06-05 08:25:12.416167 >> Number of Feature Maps per layer (per sub-pathway) = [[30, 30, 40, 40, 40, 40, 50, 50]]
2018-06-05 08:25:12.416186 >> Kernel Dimensions per layer = [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]
2018-06-05 08:25:12.416201 >> Receptive Field = [17, 17, 17]
2018-06-05 08:25:12.416217 >> Subsampling Factor per dimension (per sub-pathway) = [[3, 3, 3]]
2018-06-05 08:25:12.416232 >> Residual connections added at the output of layers (indices from 0) = [3, 5, 7]
2018-06-05 08:25:12.416247 >> Layers that will be made of Lower Rank (indices from 0) = []
2018-06-05 08:25:12.416262 >> Lower Rank layers will be made of rank = []
2018-06-05 08:25:12.416277 >> ~~Fully Connected Pathway~~
2018-06-05 08:25:12.416291 >> Number of additional FC layers (Excluding the Classif. Layer) = 2
2018-06-05 08:25:12.416306 >> Number of Feature Maps in the additional FC layers = [150, 150]
2018-06-05 08:25:12.416322 >> Residual connections added at the output of layers (indices from 0) = [1]
2018-06-05 08:25:12.416337 >> Layers that will be made of Lower Rank (indices from 0) = []
2018-06-05 08:25:12.416353 >> Dimensions of Kernels in the 1st FC layer (Classif. layer if no hidden FCs used) = [3, 3, 3]
2018-06-05 08:25:12.416368 >> ~~Size Of Image Segments~~
2018-06-05 08:25:12.416383 >> Size of Segments for Training = [25, 25, 25]
2018-06-05 08:25:12.416399 >> Size of Segments for Validation = [17, 17, 17]
2018-06-05 08:25:12.416414 >> Size of Segments for Testing = [45, 45, 45]
2018-06-05 08:25:12.416428 >> ~~Batch Sizes~~
2018-06-05 08:25:12.416442 >> Batch Size for Training = 10
2018-06-05 08:25:12.416456 >> Batch Size for Validation = 48
2018-06-05 08:25:12.416471 >> Batch Size for Testing = 10
2018-06-05 08:25:12.416484 >> ~~Dropout Rates~~
2018-06-05 08:25:12.416504 >> Drop.R. for each layer in Normal Pathway = []
2018-06-05 08:25:12.416519 >> Drop.R. for each layer in Subsampled Pathway = []
2018-06-05 08:25:12.416540 >> Drop.R. for each layer in FC Pathway (additional FC layers + Classific.Layer at end) = [0.0, 0.5, 0.5]
2018-06-05 08:25:12.416554 >> ~~Weight Initialization~~
2018-06-05 08:25:12.416570 >> Initialization method and params for the conv kernel weights = ['fanIn', 2]
2018-06-05 08:25:12.416584 >> ~~Activation Function~~
2018-06-05 08:25:12.416598 >> Activation function to use = prelu
2018-06-05 08:25:12.416613 >> ~~Batch Normalization~~
2018-06-05 08:25:12.416628 >> Apply BN straight on pathways' inputs (eg straight on segments) = [False, False, True, False]
2018-06-05 08:25:12.416643 >> Batch Normalization uses a rolling average for inference, over this many batches = 60
2018-06-05 08:25:12.416657 >> ========== Done with printing session's parameters ==========
2018-06-05 08:25:12.416671 >> =============================================================
2018-06-05 08:25:12.416690 >> 
=========== Creating the CNN model ===============
2018-06-05 08:25:12.417378 >> ...Building the CNN model...
2018-06-05 08:25:12.417562 >> [Pathway_NORMAL] is being built...
2018-06-05 08:25:12.417595 >> 	[Pathway_NORMAL]: Input's Shape: (Train) [10, 2, 25, 25, 25], (Val) [48, 2, 17, 17, 17], (Test) [10, 2, 45, 45, 45]
2018-06-05 08:25:12.417616 >> 	[Conv.Layer_0], Filter Shape: [30, 2, 3, 3, 3]
2018-06-05 08:25:12.417635 >> 	[Conv.Layer_0], Input's Shape: (Train) [10, 2, 25, 25, 25], (Val) [48, 2, 17, 17, 17], (Test) [10, 2, 45, 45, 45]
2018-06-05 08:25:12.426165 >> 	[Conv.Layer_1], Filter Shape: [30, 30, 3, 3, 3]
2018-06-05 08:25:12.426205 >> 	[Conv.Layer_1], Input's Shape: (Train) [10, 30, 23, 23, 23], (Val) [48, 30, 15, 15, 15], (Test) [10, 30, 43, 43, 43]
2018-06-05 08:25:12.450243 >> 	[Conv.Layer_2], Filter Shape: [40, 30, 3, 3, 3]
2018-06-05 08:25:12.450291 >> 	[Conv.Layer_2], Input's Shape: (Train) [10, 30, 21, 21, 21], (Val) [48, 30, 13, 13, 13], (Test) [10, 30, 41, 41, 41]
2018-06-05 08:25:12.473298 >> 	[Conv.Layer_3], Filter Shape: [40, 40, 3, 3, 3]
2018-06-05 08:25:12.473347 >> 	[Conv.Layer_3], Input's Shape: (Train) [10, 40, 19, 19, 19], (Val) [48, 40, 11, 11, 11], (Test) [10, 40, 39, 39, 39]
2018-06-05 08:25:12.495349 >> 	[Pathway_NORMAL]: making Residual Connection between output of [Layer_3] to input of previous layer.
2018-06-05 08:25:12.506674 >> 	[Conv.Layer_4], Filter Shape: [40, 40, 3, 3, 3]
2018-06-05 08:25:12.506739 >> 	[Conv.Layer_4], Input's Shape: (Train) [10, 40, 17, 17, 17], (Val) [48, 40, 9, 9, 9], (Test) [10, 40, 37, 37, 37]
2018-06-05 08:25:12.528590 >> 	[Conv.Layer_5], Filter Shape: [40, 40, 3, 3, 3]
2018-06-05 08:25:12.528647 >> 	[Conv.Layer_5], Input's Shape: (Train) [10, 40, 15, 15, 15], (Val) [48, 40, 7, 7, 7], (Test) [10, 40, 35, 35, 35]
2018-06-05 08:25:12.551535 >> 	[Pathway_NORMAL]: making Residual Connection between output of [Layer_5] to input of previous layer.
2018-06-05 08:25:12.561812 >> 	[Conv.Layer_6], Filter Shape: [50, 40, 3, 3, 3]
2018-06-05 08:25:12.561853 >> 	[Conv.Layer_6], Input's Shape: (Train) [10, 40, 13, 13, 13], (Val) [48, 40, 5, 5, 5], (Test) [10, 40, 33, 33, 33]
2018-06-05 08:25:12.585503 >> 	[Conv.Layer_7], Filter Shape: [50, 50, 3, 3, 3]
2018-06-05 08:25:12.585552 >> 	[Conv.Layer_7], Input's Shape: (Train) [10, 50, 11, 11, 11], (Val) [48, 50, 3, 3, 3], (Test) [10, 50, 31, 31, 31]
2018-06-05 08:25:12.609133 >> 	[Pathway_NORMAL]: making Residual Connection between output of [Layer_7] to input of previous layer.
2018-06-05 08:25:12.619894 >> 	[Pathway_NORMAL]: Output's Shape: (Train) [10, 50, 9, 9, 9], (Val) [48, 50, 1, 1, 1], (Test) [10, 50, 29, 29, 29]
2018-06-05 08:25:12.619921 >> [Pathway_NORMAL] done.
2018-06-05 08:25:12.620013 >> [Pathway_SUBSAMPLED[3, 3, 3]] is being built...
2018-06-05 08:25:12.620038 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: Input's Shape: (Train) [10, 2, 19, 19, 19], (Val) [48, 2, 17, 17, 17], (Test) [10, 2, 26, 26, 26]
2018-06-05 08:25:12.620070 >> 	[Conv.Layer_0], Filter Shape: [30, 2, 3, 3, 3]
2018-06-05 08:25:12.620132 >> 	[Conv.Layer_0], Input's Shape: (Train) [10, 2, 19, 19, 19], (Val) [48, 2, 17, 17, 17], (Test) [10, 2, 26, 26, 26]
2018-06-05 08:25:12.623144 >> 	[Conv.Layer_1], Filter Shape: [30, 30, 3, 3, 3]
2018-06-05 08:25:12.623168 >> 	[Conv.Layer_1], Input's Shape: (Train) [10, 30, 17, 17, 17], (Val) [48, 30, 15, 15, 15], (Test) [10, 30, 24, 24, 24]
2018-06-05 08:25:12.644875 >> 	[Conv.Layer_2], Filter Shape: [40, 30, 3, 3, 3]
2018-06-05 08:25:12.644909 >> 	[Conv.Layer_2], Input's Shape: (Train) [10, 30, 15, 15, 15], (Val) [48, 30, 13, 13, 13], (Test) [10, 30, 22, 22, 22]
2018-06-05 08:25:12.667300 >> 	[Conv.Layer_3], Filter Shape: [40, 40, 3, 3, 3]
2018-06-05 08:25:12.667361 >> 	[Conv.Layer_3], Input's Shape: (Train) [10, 40, 13, 13, 13], (Val) [48, 40, 11, 11, 11], (Test) [10, 40, 20, 20, 20]
2018-06-05 08:25:12.690819 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: making Residual Connection between output of [Layer_3] to input of previous layer.
2018-06-05 08:25:12.701447 >> 	[Conv.Layer_4], Filter Shape: [40, 40, 3, 3, 3]
2018-06-05 08:25:12.701492 >> 	[Conv.Layer_4], Input's Shape: (Train) [10, 40, 11, 11, 11], (Val) [48, 40, 9, 9, 9], (Test) [10, 40, 18, 18, 18]
2018-06-05 08:25:12.771587 >> 	[Conv.Layer_5], Filter Shape: [40, 40, 3, 3, 3]
2018-06-05 08:25:12.771627 >> 	[Conv.Layer_5], Input's Shape: (Train) [10, 40, 9, 9, 9], (Val) [48, 40, 7, 7, 7], (Test) [10, 40, 16, 16, 16]
2018-06-05 08:25:12.795886 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: making Residual Connection between output of [Layer_5] to input of previous layer.
2018-06-05 08:25:12.806140 >> 	[Conv.Layer_6], Filter Shape: [50, 40, 3, 3, 3]
2018-06-05 08:25:12.806170 >> 	[Conv.Layer_6], Input's Shape: (Train) [10, 40, 7, 7, 7], (Val) [48, 40, 5, 5, 5], (Test) [10, 40, 14, 14, 14]
2018-06-05 08:25:12.829323 >> 	[Conv.Layer_7], Filter Shape: [50, 50, 3, 3, 3]
2018-06-05 08:25:12.829371 >> 	[Conv.Layer_7], Input's Shape: (Train) [10, 50, 5, 5, 5], (Val) [48, 50, 3, 3, 3], (Test) [10, 50, 12, 12, 12]
2018-06-05 08:25:12.852451 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: making Residual Connection between output of [Layer_7] to input of previous layer.
2018-06-05 08:25:12.863034 >> 	[Pathway_SUBSAMPLED[3, 3, 3]]: Output's Shape: (Train) [10, 50, 3, 3, 3], (Val) [48, 50, 1, 1, 1], (Test) [10, 50, 10, 10, 10]
2018-06-05 08:25:12.863082 >> [Pathway_SUBSAMPLED[3, 3, 3]] done.
2018-06-05 08:25:12.891597 >> DEBUG: Shape of the kernel of the first FC layer is : [3, 3, 3]
2018-06-05 08:25:12.891668 >> DEBUG: Input to the FC Pathway will be padded by that many voxels per dimension: [2, 2, 2]
2018-06-05 08:25:12.899352 >> [Pathway_FC] is being built...
2018-06-05 08:25:12.899427 >> 	[Pathway_FC]: Input's Shape: (Train) [10, 100, 11, 11, 11], (Val) [48, 100, 3, 3, 3], (Test) [10, 100, 31, 31, 31]
2018-06-05 08:25:12.899474 >> 	[Conv.Layer_0], Filter Shape: [150, 100, 3, 3, 3]
2018-06-05 08:25:12.899519 >> 	[Conv.Layer_0], Input's Shape: (Train) [10, 100, 11, 11, 11], (Val) [48, 100, 3, 3, 3], (Test) [10, 100, 31, 31, 31]
2018-06-05 08:25:12.937799 >> 	[Conv.Layer_1], Filter Shape: [150, 150, 1, 1, 1]
2018-06-05 08:25:12.937871 >> 	[Conv.Layer_1], Input's Shape: (Train) [10, 150, 9, 9, 9], (Val) [48, 150, 1, 1, 1], (Test) [10, 150, 29, 29, 29]
2018-06-05 08:25:12.966163 >> 	[Pathway_FC]: making Residual Connection between output of [Layer_1] to input of previous layer.
2018-06-05 08:25:12.977399 >> 	[Conv.Layer_2], Filter Shape: [5, 150, 1, 1, 1]
2018-06-05 08:25:12.977466 >> 	[Conv.Layer_2], Input's Shape: (Train) [10, 150, 9, 9, 9], (Val) [48, 150, 1, 1, 1], (Test) [10, 150, 29, 29, 29]
2018-06-05 08:25:13.000729 >> 	[Pathway_FC]: Output's Shape: (Train) [10, 5, 9, 9, 9], (Val) [48, 5, 1, 1, 1], (Test) [10, 5, 29, 29, 29]
2018-06-05 08:25:13.000774 >> [Pathway_FC] done.
2018-06-05 08:25:13.000803 >> Adding the final Softmax Target layer...
2018-06-05 08:25:13.006996 >> Finished building the CNN's model.
2018-06-05 08:25:13.007043 >> 
=========== Saving the model ===============
2018-06-05 08:25:13.007124 >> Saving network to: /home/uziel/DISS/ischleseg/deepmedic/examples/output/cnnModels/deepMedic.initial.2018-06-05.08.25.13.007069.save
2018-06-05 08:25:13.545737 >> Model saved.
2018-06-05 08:25:13.545774 >> =========== Creation of the model: "deepMedic" finished =================
