2018-05-28 09:41:15.494089 >> =============================== logger created =======================================
2018-05-28 09:41:15.494167 >> CONFIG: Given THEANO_FLAGS: ,on_unused_input=warn,mode=FAST_RUN,device=cuda,floatX=float32,force_device=True,dnn.enabled=auto,openmp=True
2018-05-28 09:41:15.494198 >> CONFIG: The configuration file for the session was loaded from: /home/uziel/DISS/deepmedic/examples/configFiles/tinyCnn/model/modelConfig.cfg
2018-05-28 09:41:15.494319 >> 
===========    NEW CREATE-MODEL SESSION    ============
2018-05-28 09:41:15.494335 >> =============================================================
2018-05-28 09:41:15.494348 >> =============== PARAMETERS FOR MODEL CREATION ===============
2018-05-28 09:41:15.494374 >> =============================================================
2018-05-28 09:41:15.494386 >> CNN model's name = tinyCnn
2018-05-28 09:41:15.494420 >> Main output folder = /home/uziel/DISS/deepmedic/examples/output
2018-05-28 09:41:15.494444 >> Path and filename to save model = /home/uziel/DISS/deepmedic/examples/output/cnnModels/tinyCnn
2018-05-28 09:41:15.494468 >> ~~~~~~~~~~~~~~~~~~Model parameters~~~~~~~~~~~~~~~~
2018-05-28 09:41:15.494509 >> Number of Classes (including background) = 5
2018-05-28 09:41:15.494521 >> ~~Normal Pathway~~
2018-05-28 09:41:15.494533 >> Number of Input Channels = 2
2018-05-28 09:41:15.494546 >> Number of Layers = 3
2018-05-28 09:41:15.494573 >> Number of Feature Maps per layer = [4, 5, 6]
2018-05-28 09:41:15.494604 >> Kernel Dimensions per layer = [[3, 3, 3], [3, 3, 3], [3, 3, 3]]
2018-05-28 09:41:15.494618 >> Receptive Field = [7, 7, 7]
2018-05-28 09:41:15.494631 >> Residual connections added at the output of layers (indices from 0) = []
2018-05-28 09:41:15.494658 >> Layers that will be made of Lower Rank (indices from 0) = []
2018-05-28 09:41:15.494683 >> Lower Rank layers will be made of rank = []
2018-05-28 09:41:15.494709 >> ~~Subsampled Pathway~~
2018-05-28 09:41:15.494721 >> Use subsampled Pathway = False
2018-05-28 09:41:15.494734 >> Number of subsampled pathways that will be built = 0
2018-05-28 09:41:15.494759 >> Number of Layers (per sub-pathway) = []
2018-05-28 09:41:15.494773 >> Number of Feature Maps per layer (per sub-pathway) = []
2018-05-28 09:41:15.494785 >> Kernel Dimensions per layer = []
2018-05-28 09:41:15.494798 >> Receptive Field = []
2018-05-28 09:41:15.494811 >> Subsampling Factor per dimension (per sub-pathway) = []
2018-05-28 09:41:15.494824 >> Residual connections added at the output of layers (indices from 0) = []
2018-05-28 09:41:15.494836 >> Layers that will be made of Lower Rank (indices from 0) = []
2018-05-28 09:41:15.494849 >> Lower Rank layers will be made of rank = []
2018-05-28 09:41:15.494862 >> ~~Fully Connected Pathway~~
2018-05-28 09:41:15.494874 >> Number of additional FC layers (Excluding the Classif. Layer) = 0
2018-05-28 09:41:15.494887 >> Number of Feature Maps in the additional FC layers = []
2018-05-28 09:41:15.494900 >> Residual connections added at the output of layers (indices from 0) = []
2018-05-28 09:41:15.494913 >> Layers that will be made of Lower Rank (indices from 0) = []
2018-05-28 09:41:15.494927 >> Dimensions of Kernels in the 1st FC layer (Classif. layer if no hidden FCs used) = [1, 1, 1]
2018-05-28 09:41:15.494940 >> ~~Size Of Image Segments~~
2018-05-28 09:41:15.494954 >> Size of Segments for Training = [25, 25, 25]
2018-05-28 09:41:15.494967 >> Size of Segments for Validation = [7, 7, 7]
2018-05-28 09:41:15.494980 >> Size of Segments for Testing = [45, 45, 45]
2018-05-28 09:41:15.494992 >> ~~Batch Sizes~~
2018-05-28 09:41:15.495005 >> Batch Size for Training = 10
2018-05-28 09:41:15.495017 >> Batch Size for Validation = 50
2018-05-28 09:41:15.495029 >> Batch Size for Testing = 10
2018-05-28 09:41:15.495041 >> ~~Dropout Rates~~
2018-05-28 09:41:15.495054 >> Drop.R. for each layer in Normal Pathway = []
2018-05-28 09:41:15.495067 >> Drop.R. for each layer in Subsampled Pathway = []
2018-05-28 09:41:15.495084 >> Drop.R. for each layer in FC Pathway (additional FC layers + Classific.Layer at end) = [0.5]
2018-05-28 09:41:15.495101 >> ~~Weight Initialization~~
2018-05-28 09:41:15.495115 >> Initialization method and params for the conv kernel weights = ['fanIn', 2]
2018-05-28 09:41:15.495128 >> ~~Activation Function~~
2018-05-28 09:41:15.495140 >> Activation function to use = prelu
2018-05-28 09:41:15.495152 >> ~~Batch Normalization~~
2018-05-28 09:41:15.495165 >> Apply BN straight on pathways' inputs (eg straight on segments) = [False, False, True, False]
2018-05-28 09:41:15.495178 >> Batch Normalization uses a rolling average for inference, over this many batches = 60
2018-05-28 09:41:15.495190 >> ========== Done with printing session's parameters ==========
2018-05-28 09:41:15.495202 >> =============================================================
2018-05-28 09:41:15.495218 >> 
=========== Creating the CNN model ===============
2018-05-28 09:41:15.495589 >> ...Building the CNN model...
2018-05-28 09:41:15.495711 >> [Pathway_NORMAL] is being built...
2018-05-28 09:41:15.495766 >> 	[Pathway_NORMAL]: Input's Shape: (Train) [10, 2, 25, 25, 25], (Val) [50, 2, 7, 7, 7], (Test) [10, 2, 45, 45, 45]
2018-05-28 09:41:15.495784 >> 	[Conv.Layer_0], Filter Shape: [4, 2, 3, 3, 3]
2018-05-28 09:41:15.495828 >> 	[Conv.Layer_0], Input's Shape: (Train) [10, 2, 25, 25, 25], (Val) [50, 2, 7, 7, 7], (Test) [10, 2, 45, 45, 45]
2018-05-28 09:41:15.500373 >> 	[Conv.Layer_1], Filter Shape: [5, 4, 3, 3, 3]
2018-05-28 09:41:15.500428 >> 	[Conv.Layer_1], Input's Shape: (Train) [10, 4, 23, 23, 23], (Val) [50, 4, 5, 5, 5], (Test) [10, 4, 43, 43, 43]
2018-05-28 09:41:15.522139 >> 	[Conv.Layer_2], Filter Shape: [6, 5, 3, 3, 3]
2018-05-28 09:41:15.522174 >> 	[Conv.Layer_2], Input's Shape: (Train) [10, 5, 21, 21, 21], (Val) [50, 5, 3, 3, 3], (Test) [10, 5, 41, 41, 41]
2018-05-28 09:41:15.543624 >> 	[Pathway_NORMAL]: Output's Shape: (Train) [10, 6, 19, 19, 19], (Val) [50, 6, 1, 1, 1], (Test) [10, 6, 39, 39, 39]
2018-05-28 09:41:15.543655 >> [Pathway_NORMAL] done.
2018-05-28 09:41:15.543720 >> DEBUG: Shape of the kernel of the first FC layer is : [1, 1, 1]
2018-05-28 09:41:15.543749 >> DEBUG: Input to the FC Pathway will be padded by that many voxels per dimension: [0, 0, 0]
2018-05-28 09:41:15.543827 >> [Pathway_FC] is being built...
2018-05-28 09:41:15.543868 >> 	[Pathway_FC]: Input's Shape: (Train) [10, 6, 19, 19, 19], (Val) [50, 6, 1, 1, 1], (Test) [10, 6, 39, 39, 39]
2018-05-28 09:41:15.543886 >> 	[Conv.Layer_0], Filter Shape: [5, 6, 1, 1, 1]
2018-05-28 09:41:15.543903 >> 	[Conv.Layer_0], Input's Shape: (Train) [10, 6, 19, 19, 19], (Val) [50, 6, 1, 1, 1], (Test) [10, 6, 39, 39, 39]
2018-05-28 09:41:15.567910 >> 	[Pathway_FC]: Output's Shape: (Train) [10, 5, 19, 19, 19], (Val) [50, 5, 1, 1, 1], (Test) [10, 5, 39, 39, 39]
2018-05-28 09:41:15.567942 >> [Pathway_FC] done.
2018-05-28 09:41:15.567987 >> Adding the final Softmax Target layer...
2018-05-28 09:41:15.573427 >> Finished building the CNN's model.
2018-05-28 09:41:15.573457 >> 
=========== Saving the model ===============
2018-05-28 09:41:15.573521 >> Saving network to: /home/uziel/DISS/deepmedic/examples/output/cnnModels/tinyCnn.initial.2018-05-28.09.41.15.573483.save
2018-05-28 09:41:15.654274 >> Model saved.
2018-05-28 09:41:15.654312 >> =========== Creation of the model: "tinyCnn" finished =================
