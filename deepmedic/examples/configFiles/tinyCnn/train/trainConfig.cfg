#Default values are set internally, if the corresponding parameter is not found in the configuration file.

#[Optional but highly suggested] The name will be used for saving the models,logs and results.
#Default: "trainSession"
sessionName = "trainSessionTinyCnn"

#[Required] The main folder that the output will be placed.
folderForOutput = "../../../output/"

#[Optional] The path to the saved CNN-model to use for training. Optional in the case the the model is specified from command line with the -model option. In this case, this entry file of the config file will be disregarded, and the one from the command line will be used.
cnnModelFilePath = "../../../output/models/placeholder"


#=======================Training=====================================

#+++++++++++Input+++++++++++

#[Required] A list that should contain as many entries as the channels of the input image (eg multi-modal MRI). The entries should be paths to files. Those files should be listing the paths to the corresponding channels for each training-case. (see example files).
channelsTraining = ["./trainChannels_flair.cfg", "./trainChannels_t1c.cfg"]

#[Required] The path to a file which should list paths to the Ground Truth labels of each training case.
gtLabelsTraining = "./trainGtLabels.cfg"

#+++++++++++Sampling+++++++++++

#[Optional] The path to a file, which should list paths to the Region-Of-Interest masks for each training case.
#If ROI masks are provided, under default-sampling settings, the training samples will be extracted only within it. Otherwise from whole volume.
#This mask is also used for calculating mu and std intensities for intensity-augmentation, if performed.
roiMasksTraining = "./trainRoiMasks.cfg"

#+++++++++++Training Cycle (see documentation)+++++++++++

#[Optionals but highly suggested as they are model dependent.]
#How many epochs to train for. Default: 35
numberOfEpochs = 2
#How many subepochs comprise an epoch. Every subepoch I get Accuracy reported. Default: 20
numberOfSubepochs = 2
#Every subepoch, load the images from that many cases and extract new training samples. Default: 50
numOfCasesLoadedPerSubepoch = 50
#Every subepoch, extract in total this many segments and load them on the GPU. Memory Limitated. Default: 1000
#Note: This number in combination with the batchSizeTraining, define the number of optimization steps per subepoch (=NumOfSegmentsOnGpu / BatchSize).
numberTrainingSegmentsLoadedOnGpuPerSubep = 1000

#+++++++++++Learning Rate Schedule+++++++++++

#[Optional] The type of schedule to use for Learning Rate annealing.
#0=Stable Decrease. 1=Auto (Lower LR when validation accuracy plateaus. Requires validation-on-samples). 2=Lower at predefined epochs. 3=Exponentially decrease LR, linearly increase Mom.
#Note: Training Schedule is very important. We suggest running stable and observing training error, then lower LR when it plateaus. Otherwise, use exponential but make sure to train for enough epochs.
stable0orAuto1orPredefined2orExponential3LrSchedule = 3

#+++++++++++Data Augmentation+++++++++++

#[Optional] Specify whether to reflect the images by 50% probability in respect to the X/Y/Z axis. Default: [False, False, False]
reflectImagesPerAxis = [True,False,False]

#[Optional] Augmentation by changing the mean and std of training samples. Default: False
performIntAugm = False




